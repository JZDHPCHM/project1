SELECT 
T3, ROUND(SUM(ROUND((PAY_TIME - END_TIME), 2)) * 24 * 60 / COUNT(*), 2)
FROM(

SELECT T.REPORT_ID,
SUBSTR(CLAIMS.ORG_CODE,1,1) AS T3,
       APP_TIME,
       T.END_TIME,
       (CASE
         WHEN NOT_PAY.REPORT_ID IS NOT NULL
           THEN T.END_TIME   
               --拒赔类付款时间为空
         WHEN refu.HAS_REFU >0  THEN NULL    
           --豁免养育类 付款时间=结案时间
        WHEN HY.HAS_HY >0  THEN T.END_TIME
        
             WHEN PAYINFO.MAX_PAY_SEND_TIME IS NOT NULL
           THEN  PAYINFO.MAX_PAY_SEND_TIME
             ELSE NULL END) AS PAY_TIME,
               ---1 存在拒赔、0不存在拒赔
              ( CASE WHEN REFU.HAS_REFU >0  THEN 1 ELSE 0 END) AS HAS_REFU
 
  FROM (SELECT DISTINCT T1.REPORT_ID, T2.APP_TIME
 , T3.END_TIME
          FROM (

                SELECT DISTINCT T.REPORT_ID
                  FROM TC_CLAIMSAUDIT T
                 WHERE/* T.CONCLUSION IN ('01','02','03','04')
                   AND */T.HIS_TAG = '0') T1,
                --T2审批时间增加小额自动理赔 add by jason 20171009
                        (SELECT T.REPORT_ID, MAX(T.END_TIME) AS APP_TIME
                           FROM TC_TASKTIME T
                          WHERE T.CODE = 'ClaimWf001_06'
                          GROUP BY T.REPORT_ID
                         UNION
                         SELECT T.REPORT_ID, MAX(T.END_TIME) AS APP_TIME
                           FROM TC_TASKTIME T, TC_SMALL_AUTO_CLAIMS SAC
                          WHERE T.CODE = 'ClaimWf001_08'
                            AND T.REPORT_ID = SAC.REPORT_ID
                            AND SAC.IS_VALID = '1'
                          GROUP BY T.REPORT_ID) T2,
               (SELECT T.REPORT_ID, MAX(T.END_TIME) AS END_TIME
                  FROM TC_TASKTIME T
                 WHERE T.CODE = 'ClaimWf001_08'
                 GROUP BY T.REPORT_ID) T3
         WHERE T1.REPORT_ID = T2.REPORT_ID
          AND T1.REPORT_ID = T3.REPORT_ID          
         ) T,TC_CLAIMS CLAIMS
         --支付号
 LEFT JOIN (SELECT TTF.REPORT_ID,TO_DATE(MAX(TR.PAYSENDDATE),'YYYYMMDDHH24MISS') AS MAX_PAY_SEND_TIME
  FROM TC_FINANCE_PAYMENT TP,TC_FINANCE_RESPONSE TR,TC_TASK_TO_FINANCE TTF
WHERE TP.BIDUIID=TR.BIDUIID AND TTF.BIDUIID=TP.BIDUIID AND TTF.BIDUIID=TR.BIDUIID
AND TTF.STATUS='2'
AND TR.TRANSSTATE='2' 
GROUP BY TTF.REPORT_ID
  ) PAYINFO
 ON PAYINFO.REPORT_ID=CLAIMS.REPORT_ID
 LEFT JOIN TC_LOAN_NOT_PAY_REPORTS NOT_PAY
 ON NOT_PAY.REPORT_ID=CLAIMS.REPORT_ID
 --是否包含豁免、养育
 LEFT JOIN 
 (SELECT  ca.report_id,COUNT(1) AS HAS_HY
 FROM TC_CLAIMSAUDIT CA WHERE (CA.CONCLUSION = '05' OR ca.conclusion='06') AND ca.his_tag='0'
GROUP BY ca.report_id) HY ON HY.REPORT_ID=CLAIMS.REPORT_ID

 --是否包含拒赔
 LEFT JOIN 
 (SELECT  ca.report_id,COUNT(1) AS HAS_REFU
 FROM TC_CLAIMSAUDIT CA WHERE (CA.CONCLUSION  in ('07','08','09','10')  ) AND ca.his_tag='0'
GROUP BY ca.report_id) REFU ON REFU.REPORT_ID=CLAIMS.REPORT_ID


               WHERE T.REPORT_ID=CLAIMS.REPORT_ID 
               ) M
               --受理时间
               LEFT JOIN (  SELECT T.REPORT_ID, MIN(t.start_time) AS ACC_GET_TIME
                  FROM TC_TASKTIME T
                 WHERE T.CODE = 'ClaimWf001_03'
                 GROUP BY T.REPORT_ID) ACC  ON ACC.REPORT_ID=M.REPORT_ID
               WHERE
                 TRUNC(M.END_TIME) BETWEEN
              ADD_months(TO_DATE('2018-06-30', 'YYYY-MM-DD')+1,-3) AND
            TO_DATE('2018-06-30', 'YYYY-MM-DD')
          --  AND   M.report_id='18007533'
          GROUP BY t3
 ORDER BY M.APP_TIME DESC